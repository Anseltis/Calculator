<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{BB8ECB3C-5B46-4185-AA3B-486DFE93788A}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>AnsiSoft.Calculator.Model.Analyzer.Test</RootNamespace>
    <AssemblyName>Model.Analyzer.Test</AssemblyName>
    <TargetFrameworkVersion>v4.6</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <SccProjectName>SAK</SccProjectName>
    <SccLocalPath>SAK</SccLocalPath>
    <SccAuxPath>SAK</SccAuxPath>
    <SccProvider>SAK</SccProvider>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="nunit.framework, Version=2.6.4.14350, Culture=neutral, PublicKeyToken=96d09a1eb7f44a77, processorArchitecture=MSIL">
      <HintPath>..\packages\NUnit.2.6.4\lib\nunit.framework.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="Rhino.Mocks, Version=3.6.0.0, Culture=neutral, PublicKeyToken=0b3305902db7183f, processorArchitecture=MSIL">
      <HintPath>..\packages\RhinoMocks.3.6.1\lib\net\Rhino.Mocks.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Xml" />
    <Reference Include="TechTalk.SpecFlow, Version=1.9.0.77, Culture=neutral, PublicKeyToken=0778194805d6db41, processorArchitecture=MSIL">
      <HintPath>..\packages\SpecFlow.1.9.0\lib\net35\TechTalk.SpecFlow.dll</HintPath>
      <Private>True</Private>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Features\SyntacticValidationSteps.cs" />
    <Compile Include="Lexical\CompiledLexicalRuleTest.cs" />
    <Compile Include="Lexical\Exceptions\WrongLexicalRuleExceptionTest.cs" />
    <Compile Include="Lexical\Exceptions\LexicalParsingExceptionTest.cs" />
    <Compile Include="Lexical\LexicalAnalyzerTest.cs" />
    <Compile Include="Lexical\LexicalRuleTest.cs" />
    <Compile Include="Lexical\StandardLexicalAnalyzerTest.cs" />
    <Compile Include="Lexical\Tokens\BinaryOperatorTokenTest.cs" />
    <Compile Include="Lexical\Tokens\OperatorTokenTest.cs" />
    <Compile Include="Lexical\Tokens\SeparatorTokenTest.cs" />
    <Compile Include="Lexical\Tokens\RightBracketTokenTest.cs" />
    <Compile Include="Lexical\Tokens\LeftBracketTokenTest.cs" />
    <Compile Include="Lexical\Tokens\NumberTokenTest.cs" />
    <Compile Include="Lexical\Tokens\IdentifierTokenTest.cs" />
    <Compile Include="Lexical\Tokens\TokenTest.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Features\SyntacticValidation.feature.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>SyntacticValidation.feature</DependentUpon>
    </Compile>
    <Compile Include="Syntactic\Blocks\BlockTest.cs" />
    <Compile Include="Syntactic\Exceptions\SyntacticParseExceptionTest.cs" />
    <Compile Include="Syntactic\Nodes\BlockSyntacticNodeTest.cs" />
    <Compile Include="Syntactic\Nodes\TokenSyntacticNodeTest.cs" />
    <Compile Include="Syntactic\StandardSyntacticAnalyzerTest.cs" />
    <Compile Include="Syntactic\SyntacticAnalyzerTest.cs" />
    <Compile Include="Syntactic\SyntacticParseIterateResultTest.cs" />
    <Compile Include="Syntactic\SyntacticParseResultTest.cs" />
    <Compile Include="Translate\Rewriter\SyntacticNodeHelperTest.cs" />
    <Compile Include="Translate\Rewriter\SyntaxRewriterTest.cs" />
    <Compile Include="Translate\StandardTranslatorTest.cs" />
    <Compile Include="Translate\TranslatorTest.cs" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Model.Analyzer\Model.Analyzer.csproj">
      <Project>{25f53d7e-2cf6-487a-bf02-4e3b0d732b99}</Project>
      <Name>Model.Analyzer</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <None Include="App.config" />
    <None Include="packages.config" />
    <None Include="Features\SyntacticValidation.feature">
      <Generator>SpecFlowSingleFileGenerator</Generator>
      <LastGenOutput>SyntacticValidation.feature.cs</LastGenOutput>
    </None>
  </ItemGroup>
  <ItemGroup>
    <Service Include="{82A7F48D-3B50-4B1E-B82E-3ADA8210C358}" />
  </ItemGroup>
  <ItemGroup />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>